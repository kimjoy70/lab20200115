package thread.bank;

import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.StringTokenizer;

import javax.swing.JOptionPane;

public class ServerBankThread extends Thread {
	ServerBank sBank = null;
	ObjectInputStream ois  = null;
	ObjectOutputStream oos = null;	
	String nickName = null;
	public ServerBankThread(ServerBank sBank) {
		this.sBank = sBank;
		try {
			oos = new ObjectOutputStream
					(sBank.client.getOutputStream());			
			ois = new ObjectInputStream
						(sBank.client.getInputStream());
			String msg = (String)ois.readObject();
			JOptionPane.showMessageDialog(sBank, "msg:"+msg);
			sBank.jta_log.append(msg+"\n");
			sBank.jta_log.setCaretPosition(sBank.jta_log.getDocument().getLength());
			StringTokenizer st = null;
			if(msg!=null) {
				 st = new StringTokenizer(msg,Protocol.seperator);
			}
			st.nextToken();//100
			nickName = st.nextToken();//닉네임
			for(ServerBankThread sbt:sBank.globalList) {
				String currentName = sbt.nickName;
				//ts.jta_log.append("for문 스레드 tst"+ ":"+tst+", this:"+this+"\n");
			    //this를 사용할 때와 tst를 사용할 때 차이점에 대해서 생각해 보세요.	
				this.send(Protocol.ROOM_IN
						 +Protocol.seperator+currentName);
			}
			sBank.globalList.add(this);
			this.broadCasting(msg);			
		} catch (Exception e) {
			System.out.println("ServerBankThread:"+e.getMessage()+","+e.toString());
		}		
	}//////////////end of ServerBankThread
	public void broadCasting(String msg) {
		//JOptionPane.showMessageDialog(ts, "서버:사람수:"+ts.globalList.size());
		synchronized(this) {
			for(ServerBankThread tst:sBank.globalList) {
				tst.send(msg);
			}
		}
	}//////////////end of broadCasting 전체에 방송
	private void send(String msg) {
		try {
			oos.writeObject(msg);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}	
}
